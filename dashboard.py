{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOItinMRqkbJfQTyO6S2y+u",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/user292606/test1/blob/main/dashboard.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "_F-UCEPW6S4Q"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "QhOoZzHaxgZj",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c3e7e038-7f02-42fa-e5c6-414dd5898f69"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: streamlit in /usr/local/lib/python3.10/dist-packages (1.31.1)\n",
            "Requirement already satisfied: altair<6,>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.2.2)\n",
            "Requirement already satisfied: blinker<2,>=1.0.0 in /usr/lib/python3/dist-packages (from streamlit) (1.4)\n",
            "Requirement already satisfied: cachetools<6,>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (5.3.3)\n",
            "Requirement already satisfied: click<9,>=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.1.7)\n",
            "Requirement already satisfied: importlib-metadata<8,>=1.4 in /usr/local/lib/python3.10/dist-packages (from streamlit) (7.0.1)\n",
            "Requirement already satisfied: numpy<2,>=1.19.3 in /usr/local/lib/python3.10/dist-packages (from streamlit) (1.25.2)\n",
            "Requirement already satisfied: packaging<24,>=16.8 in /usr/local/lib/python3.10/dist-packages (from streamlit) (23.2)\n",
            "Requirement already satisfied: pandas<3,>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (1.5.3)\n",
            "Requirement already satisfied: pillow<11,>=7.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (9.4.0)\n",
            "Requirement already satisfied: protobuf<5,>=3.20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (3.20.3)\n",
            "Requirement already satisfied: pyarrow>=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (14.0.2)\n",
            "Requirement already satisfied: python-dateutil<3,>=2.7.3 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.8.2)\n",
            "Requirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.31.0)\n",
            "Requirement already satisfied: rich<14,>=10.14.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (13.7.1)\n",
            "Requirement already satisfied: tenacity<9,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.2.3)\n",
            "Requirement already satisfied: toml<2,>=0.10.1 in /usr/local/lib/python3.10/dist-packages (from streamlit) (0.10.2)\n",
            "Requirement already satisfied: typing-extensions<5,>=4.3.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.10.0)\n",
            "Requirement already satisfied: tzlocal<6,>=1.1 in /usr/local/lib/python3.10/dist-packages (from streamlit) (5.2)\n",
            "Requirement already satisfied: validators<1,>=0.2 in /usr/local/lib/python3.10/dist-packages (from streamlit) (0.22.0)\n",
            "Requirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in /usr/local/lib/python3.10/dist-packages (from streamlit) (3.1.42)\n",
            "Requirement already satisfied: pydeck<1,>=0.8.0b4 in /usr/local/lib/python3.10/dist-packages (from streamlit) (0.8.1b0)\n",
            "Requirement already satisfied: tornado<7,>=6.0.3 in /usr/local/lib/python3.10/dist-packages (from streamlit) (6.3.2)\n",
            "Requirement already satisfied: watchdog>=2.1.5 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.0.0)\n",
            "Requirement already satisfied: entrypoints in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (0.4)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (3.1.3)\n",
            "Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (4.19.2)\n",
            "Requirement already satisfied: toolz in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (0.12.1)\n",
            "Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.10/dist-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.11)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.10/dist-packages (from importlib-metadata<8,>=1.4->streamlit) (3.17.0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.3.0->streamlit) (2023.4)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil<3,>=2.7.3->streamlit) (1.16.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (3.6)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (2024.2.2)\n",
            "Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich<14,>=10.14.0->streamlit) (3.0.0)\n",
            "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich<14,>=10.14.0->streamlit) (2.16.1)\n",
            "Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.10/dist-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (5.0.1)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->altair<6,>=4.0->streamlit) (2.1.5)\n",
            "Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (23.2.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (2023.12.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.33.0)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.18.0)\n",
            "Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich<14,>=10.14.0->streamlit) (0.1.2)\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import streamlit as st\n",
        "from babel.numbers import format_currency\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.set(style='dark')"
      ],
      "metadata": {
        "id": "RGJOXBCs7Sv0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Menyiapkan Data Frame\n",
        "days_df=pd.read_csv('day.csv')\n",
        "print(days_df.head())\n",
        "\n",
        "hour_df=pd.read_csv('hour.csv')\n",
        "print(hour_df.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gUWT1KiZ7XNt",
        "outputId": "9e48bbc8-2d7d-494d-8412-c1ff4f9386bf"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   instant      dteday  season  yr  mnth  holiday  weekday  workingday  \\\n",
            "0        1  2011-01-01       1   0     1        0        6           0   \n",
            "1        2  2011-01-02       1   0     1        0        0           0   \n",
            "2        3  2011-01-03       1   0     1        0        1           1   \n",
            "3        4  2011-01-04       1   0     1        0        2           1   \n",
            "4        5  2011-01-05       1   0     1        0        3           1   \n",
            "\n",
            "   weathersit      temp     atemp       hum  windspeed  casual  registered  \\\n",
            "0           2  0.344167  0.363625  0.805833   0.160446     331         654   \n",
            "1           2  0.363478  0.353739  0.696087   0.248539     131         670   \n",
            "2           1  0.196364  0.189405  0.437273   0.248309     120        1229   \n",
            "3           1  0.200000  0.212122  0.590435   0.160296     108        1454   \n",
            "4           1  0.226957  0.229270  0.436957   0.186900      82        1518   \n",
            "\n",
            "    cnt  \n",
            "0   985  \n",
            "1   801  \n",
            "2  1349  \n",
            "3  1562  \n",
            "4  1600  \n",
            "   instant      dteday  season  yr  mnth  hr  holiday  weekday  workingday  \\\n",
            "0        1  2011-01-01       1   0     1   0        0        6           0   \n",
            "1        2  2011-01-01       1   0     1   1        0        6           0   \n",
            "2        3  2011-01-01       1   0     1   2        0        6           0   \n",
            "3        4  2011-01-01       1   0     1   3        0        6           0   \n",
            "4        5  2011-01-01       1   0     1   4        0        6           0   \n",
            "\n",
            "   weathersit  temp   atemp   hum  windspeed  casual  registered  cnt  \n",
            "0           1  0.24  0.2879  0.81        0.0       3          13   16  \n",
            "1           1  0.22  0.2727  0.80        0.0       8          32   40  \n",
            "2           1  0.22  0.2727  0.80        0.0       5          27   32  \n",
            "3           1  0.24  0.2879  0.75        0.0       3          10   13  \n",
            "4           1  0.24  0.2879  0.75        0.0       0           1    1  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "days_df['dteday']=pd.to_datetime(days_df['dteday'])\n",
        "year_2011=days_df[days_df['dteday'].dt.year == 2011] #contain data from 2011 only\n",
        "year_2012=days_df[days_df['dteday'].dt.year == 2012] #contain data from 2012 only\n",
        "print(year_2011.head())\n",
        "print(year_2012.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wCARMKbG9wTU",
        "outputId": "0f37b60e-bf04-4d38-be0f-15621c00e43c"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   instant     dteday  season  yr  mnth  holiday  weekday  workingday  \\\n",
            "0        1 2011-01-01       1   0     1        0        6           0   \n",
            "1        2 2011-01-02       1   0     1        0        0           0   \n",
            "2        3 2011-01-03       1   0     1        0        1           1   \n",
            "3        4 2011-01-04       1   0     1        0        2           1   \n",
            "4        5 2011-01-05       1   0     1        0        3           1   \n",
            "\n",
            "   weathersit      temp     atemp       hum  windspeed  casual  registered  \\\n",
            "0           2  0.344167  0.363625  0.805833   0.160446     331         654   \n",
            "1           2  0.363478  0.353739  0.696087   0.248539     131         670   \n",
            "2           1  0.196364  0.189405  0.437273   0.248309     120        1229   \n",
            "3           1  0.200000  0.212122  0.590435   0.160296     108        1454   \n",
            "4           1  0.226957  0.229270  0.436957   0.186900      82        1518   \n",
            "\n",
            "    cnt  \n",
            "0   985  \n",
            "1   801  \n",
            "2  1349  \n",
            "3  1562  \n",
            "4  1600  \n",
            "     instant     dteday  season  yr  mnth  holiday  weekday  workingday  \\\n",
            "365      366 2012-01-01       1   1     1        0        0           0   \n",
            "366      367 2012-01-02       1   1     1        1        1           0   \n",
            "367      368 2012-01-03       1   1     1        0        2           1   \n",
            "368      369 2012-01-04       1   1     1        0        3           1   \n",
            "369      370 2012-01-05       1   1     1        0        4           1   \n",
            "\n",
            "     weathersit      temp     atemp       hum  windspeed  casual  registered  \\\n",
            "365           1  0.370000  0.375621  0.692500   0.192167     686        1608   \n",
            "366           1  0.273043  0.252304  0.381304   0.329665     244        1707   \n",
            "367           1  0.150000  0.126275  0.441250   0.365671      89        2147   \n",
            "368           2  0.107500  0.119337  0.414583   0.184700      95        2273   \n",
            "369           1  0.265833  0.278412  0.524167   0.129987     140        3132   \n",
            "\n",
            "      cnt  \n",
            "365  2294  \n",
            "366  1951  \n",
            "367  2236  \n",
            "368  2368  \n",
            "369  3272  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#2011\n",
        "def create_daily_rental_df(year_2011):\n",
        "    daily_rental_df = year_2011.resample(rule='D', on='dteday').agg({\n",
        "        \"instant\": \"nunique\",\n",
        "        \"registered\": \"sum\",\n",
        "        \"casual\": \"sum\",\n",
        "        \"cnt\": \"sum\"\n",
        "    })\n",
        "    daily_rental_df = daily_rental_df.reset_index()\n",
        "    daily_rental_df.rename(columns={\n",
        "        \"instant\": \"rental_count\",\n",
        "        \"registered\": \"revenue_registered\",\n",
        "        \"casual\": \"revenue_casual\",\n",
        "        \"cnt\": \"revenue_cnt\"\n",
        "    }, inplace=True)\n",
        "    return daily_rental_df"
      ],
      "metadata": {
        "id": "zELc7yjI8Cww"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#2012\n",
        "def create_daily_rental_df(year_2012):\n",
        "    daily_rental_df = year_2012.resample(rule='D', on='dteday').agg({\n",
        "        \"instant\": \"nunique\",\n",
        "        \"registered\": \"sum\",\n",
        "        \"casual\": \"sum\",\n",
        "        \"cnt\": \"sum\"\n",
        "    })\n",
        "    daily_rental_df = daily_rental_df.reset_index()\n",
        "    daily_rental_df.rename(columns={\n",
        "        \"instant\": \"rental_count\",\n",
        "        \"registered\": \"revenue_registered\",\n",
        "        \"casual\": \"revenue_casual\",\n",
        "        \"cnt\": \"revenue_cnt\"\n",
        "    }, inplace=True)\n",
        "    return daily_rental_df"
      ],
      "metadata": {
        "id": "GYdaGLeD-U7t"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def create_sum_rental_df(year_2011):\n",
        "    sum_rental_df = year_2011.groupby(\"mnth\").quantity_x.sum().sort_values(ascending=False).reset_index()\n",
        "    return sum_rental_df"
      ],
      "metadata": {
        "id": "n6a_4cmT8sXf"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def create_sum_rental_df(year_2012):\n",
        "    sum_rental_df = year_2012.groupby(\"mnth\").quantity_x.sum().sort_values(ascending=False).reset_index()\n",
        "    return sum_rental_df"
      ],
      "metadata": {
        "id": "oD9x46Oh-a9c"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def create_byweathersit_df(year_2011):\n",
        "    byweathersit_df = year_2011.groupby(by=\"weathersit\").instant.nunique().reset_index()\n",
        "    byweathersit_df.rename(columns={\n",
        "        \"instant\": \"rental_count\"\n",
        "    }, inplace=True)\n",
        "\n",
        "    return byweathersit_df\n"
      ],
      "metadata": {
        "id": "4ABrgnVK9XyC"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def create_byweathersit_df(year_2012):\n",
        "    byweathersit_df = year_2012.groupby(by=\"weathersit\").instant.nunique().reset_index()\n",
        "    byweathersit_df.rename(columns={\n",
        "        \"instant\": \"rental_count\"\n",
        "    }, inplace=True)\n",
        "\n",
        "    return byweathersit_df\n"
      ],
      "metadata": {
        "id": "o0FOp1lW_1kI"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def create_byseason_df(year_2011):\n",
        "    byseason_df = year_2011.groupby(by=\"season\").instant.nunique().reset_index()\n",
        "    byseason_df.rename(columns={\n",
        "        \"instant\": \"rental_count\"\n",
        "    }, inplace=True)\n",
        "    byseason_df['season'] = pd.Categorical(byseason_df['season'], [\"1\", \"2\", \"3\", \"4\"])\n",
        "\n",
        "    return byseason_df"
      ],
      "metadata": {
        "id": "gvgUsJtG_7qO"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def create_byseason_df(year_2012):\n",
        "    byseason_df = year_2012.groupby(by=\"season\").instant.nunique().reset_index()\n",
        "    byseason_df.rename(columns={\n",
        "        \"instant\": \"rental_count\"\n",
        "    }, inplace=True)\n",
        "    byseason_df['season'] = pd.Categorical(byseason_df['season'], [\"1\", \"2\", \"3\", \"4\"])\n",
        "\n",
        "    return byseason_df"
      ],
      "metadata": {
        "id": "lZe_AVjkAnJb"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def create_bymonth_df(year_2011):\n",
        "    bymonth_df = year_2011.groupby(by=\"mnth\").instant.nunique().reset_index()\n",
        "    bymonth_df.rename(columns={\n",
        "        \"instant\": \"rental_count\"\n",
        "    }, inplace=True)\n",
        "\n",
        "    return bymonth_df\n"
      ],
      "metadata": {
        "id": "xpYCxqdSAs6f"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def create_bymonth_df(year_2012):\n",
        "    bymonth_df = year_2012.groupby(by=\"mnth\").instant.nunique().reset_index()\n",
        "    bymonth_df.rename(columns={\n",
        "        \"instant\": \"rental_count\"\n",
        "    }, inplace=True)\n",
        "\n",
        "    return bymonth_df\n"
      ],
      "metadata": {
        "id": "7Ql2LFjLBIJl"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def create_rfm_df(year_2011):\n",
        "    rfm_df = year_2011.groupby(by=\"instant\", as_index=False).agg({\n",
        "        \"registered\": \"sum\",\n",
        "        \"instant\": \"nunique\",\n",
        "        \"casual\": \"sum\",\n",
        "        \"cnt\": \"sum\"\n",
        "    })\n",
        "    rfm_df.columns = [\"instant\", \"max_rental_timestamp\", \"frequency\"]\n",
        "\n",
        "    rfm_df[\"max_rental_timestamp\"] = rfm_df[\"max_rental_timestamp\"].dt.date\n",
        "    recent_date = year_2011[\"dteday\"].dt.date.max()\n",
        "    rfm_df[\"recency\"] = rfm_df[\"max_rental_timestamp\"].apply(lambda x: (recent_date - x).days)\n",
        "    rfm_df.drop(\"max_rental_timestamp\", axis=1, inplace=True)\n",
        "\n",
        "    return rfm_df"
      ],
      "metadata": {
        "id": "8PStqJ3wBN_J"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def create_rfm_df(year_2012):\n",
        "    rfm_df = year_2012.groupby(by=\"instant\", as_index=False).agg({\n",
        "        \"registered\": \"sum\",\n",
        "        \"instant\": \"nunique\",\n",
        "        \"casual\": \"sum\",\n",
        "        \"cnt\": \"sum\"\n",
        "    })\n",
        "    rfm_df.columns = [\"instant\", \"max_rental_timestamp\", \"frequency\"]\n",
        "\n",
        "    rfm_df[\"max_rental_timestamp\"] = rfm_df[\"max_rental_timestamp\"].dt.date\n",
        "    recent_date = year_2012f[\"dteday\"].dt.date.max()\n",
        "    rfm_df[\"recency\"] = rfm_df[\"max_rental_timestamp\"].apply(lambda x: (recent_date - x).days)\n",
        "    rfm_df.drop(\"max_rental_timestamp\", axis=1, inplace=True)\n",
        "\n",
        "    return rfm_df"
      ],
      "metadata": {
        "id": "umSLeVf3CNS2"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Load cleaned data\n",
        "datetime_columns = [\"dteday\"]\n",
        "year_2011.sort_values(by=\"dteday\", inplace=True)\n",
        "year_2011.reset_index(inplace=True)\n",
        "\n",
        "for column in datetime_columns:\n",
        "    year_2011[column] = pd.to_datetime(year_2011[column])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ChkQGaI8CXGI",
        "outputId": "6c65e18d-7796-42a2-a574-fd88d1c9f72b"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-20-ee96c5fec926>:3: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  year_2011.sort_values(by=\"dteday\", inplace=True)\n",
            "<ipython-input-20-ee96c5fec926>:7: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  year_2011[column] = pd.to_datetime(year_2011[column])\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Filter data\n",
        "min_date = year_2011[\"dteday\"].min()\n",
        "max_date = year_2011[\"dteday\"].max()\n",
        "\n",
        "with st.sidebar:\n",
        "    # Menambahkan logo perusahaan\n",
        "    st.image(\"https://github.com/dicodingacademy/assets/raw/main/logo.png\")\n"
      ],
      "metadata": {
        "id": "1_BAg5yJEKhQ"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Filter data\n",
        "min_date = year_2012[\"dteday\"].min()\n",
        "max_date = year_2012[\"dteday\"].max()\n",
        "\n",
        "with st.sidebar:\n",
        "    # Menambahkan logo perusahaan\n",
        "    st.image(\"https://github.com/dicodingacademy/assets/raw/main/logo.png\")\n"
      ],
      "metadata": {
        "id": "-76av4vpGoZm"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "st.header('Dicoding Project Collection Dashboard :sparkles:')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4lMrdjBxLEmm",
        "outputId": "073962c0-d508-4589-be82-c57aa9f6b829"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DeltaGenerator()"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "st.subheader('Monthly Orders')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QTbD4koiLpdA",
        "outputId": "cd190991-2d72-414f-bff8-3124a2caa010"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DeltaGenerator()"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Untuk melihat naik dan turunnya suatu data maka metode yang efektif digunakan adalah line chart\n",
        "#Langkah kedua adalah dengan melakukan visualisasi data dengan menggunakan Line Chart\n",
        "#Line Chart\n",
        "#Numbers of Bikers per Month in the year of 2011\n",
        "monthlybikers=year_2011.groupby(by='mnth').agg({\n",
        "    'registered': 'sum',\n",
        "    'cnt': 'sum',\n",
        "    'casual': 'sum',\n",
        "}).round(0)\n",
        "print(monthlybikers)\n",
        "\n",
        "linemonthly = monthlybikers.plot(figsize=(8, 6), marker='o')\n",
        "linemonthly.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "plt.title(\"Number of Bikers per Month (2011)\", loc=\"center\", fontsize=20)\n",
        "plt.xticks(rotation=0)\n",
        "plt.show()\n",
        "st.pyplot\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "CD6RibuDI1xu",
        "outputId": "603301d7-0fe9-4733-f62e-333a0a873a3f"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "      registered     cnt  casual\n",
            "mnth                            \n",
            "1          35116   38189    3073\n",
            "2          41973   48215    6242\n",
            "3          51219   64045   12826\n",
            "4          72524   94870   22346\n",
            "5         104771  135821   31050\n",
            "6         112900  143512   30612\n",
            "7         104889  141341   36452\n",
            "8         107849  136691   28842\n",
            "9         100873  127418   26545\n",
            "10         98289  123511   25222\n",
            "11         86573  102167   15594\n",
            "12         78875   87323    8448\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method PyplotMixin.pyplot of DeltaGenerator()>"
            ],
            "text/html": [
              "<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n",
              "      pre.function-repr-contents {\n",
              "        overflow-x: auto;\n",
              "        padding: 8px 12px;\n",
              "        max-height: 500px;\n",
              "      }\n",
              "\n",
              "      pre.function-repr-contents.function-repr-contents-collapsed {\n",
              "        cursor: pointer;\n",
              "        max-height: 100px;\n",
              "      }\n",
              "    </style>\n",
              "    <pre style=\"white-space: initial; background:\n",
              "         var(--colab-secondary-surface-color); padding: 8px 12px;\n",
              "         border-bottom: 1px solid var(--colab-border-color);\"><b>streamlit.delta_generator.PyplotMixin.pyplot</b><br/>def pyplot(fig: Optional[&#x27;Figure&#x27;]=None, clear_figure: Optional[bool]=None, use_container_width: bool=True, **kwargs: Any) -&gt; &#x27;DeltaGenerator&#x27;</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/streamlit/elements/pyplot.py</a>Display a matplotlib.pyplot figure.\n",
              "\n",
              "Parameters\n",
              "----------\n",
              "fig : Matplotlib Figure\n",
              "    The figure to plot. When this argument isn&#x27;t specified, this\n",
              "    function will render the global figure (but this is deprecated,\n",
              "    as described below)\n",
              "\n",
              "clear_figure : bool\n",
              "    If True, the figure will be cleared after being rendered.\n",
              "    If False, the figure will not be cleared after being rendered.\n",
              "    If left unspecified, we pick a default based on the value of `fig`.\n",
              "\n",
              "    * If `fig` is set, defaults to `False`.\n",
              "\n",
              "    * If `fig` is not set, defaults to `True`. This simulates Jupyter&#x27;s\n",
              "      approach to matplotlib rendering.\n",
              "\n",
              "use_container_width : bool\n",
              "    If True, set the chart width to the column width. Defaults to `True`.\n",
              "\n",
              "**kwargs : any\n",
              "    Arguments to pass to Matplotlib&#x27;s savefig function.\n",
              "\n",
              "Example\n",
              "-------\n",
              "&gt;&gt;&gt; import streamlit as st\n",
              "&gt;&gt;&gt; import matplotlib.pyplot as plt\n",
              "&gt;&gt;&gt; import numpy as np\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; arr = np.random.normal(1, 1, size=100)\n",
              "&gt;&gt;&gt; fig, ax = plt.subplots()\n",
              "&gt;&gt;&gt; ax.hist(arr, bins=20)\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; st.pyplot(fig)\n",
              "\n",
              ".. output::\n",
              "   https://doc-pyplot.streamlit.app/\n",
              "   height: 630px\n",
              "\n",
              "Notes\n",
              "-----\n",
              ".. note::\n",
              "   Deprecation warning. After December 1st, 2020, we will remove the ability\n",
              "   to specify no arguments in `st.pyplot()`, as that requires the use of\n",
              "   Matplotlib&#x27;s global figure object, which is not thread-safe. So\n",
              "   please always pass a figure object as shown in the example section\n",
              "   above.\n",
              "\n",
              "Matplotlib supports several types of &quot;backends&quot;. If you&#x27;re getting an\n",
              "error using Matplotlib with Streamlit, try setting your backend to &quot;TkAgg&quot;::\n",
              "\n",
              "    echo &quot;backend: TkAgg&quot; &gt;&gt; ~/.matplotlib/matplotlibrc\n",
              "\n",
              "For more information, see https://matplotlib.org/faq/usage_faq.html.</pre>\n",
              "      <script>\n",
              "      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n",
              "        for (const element of document.querySelectorAll('.filepath')) {\n",
              "          element.style.display = 'block'\n",
              "          element.onclick = (event) => {\n",
              "            event.preventDefault();\n",
              "            event.stopPropagation();\n",
              "            google.colab.files.view(element.textContent, 38);\n",
              "          };\n",
              "        }\n",
              "      }\n",
              "      for (const element of document.querySelectorAll('.function-repr-contents')) {\n",
              "        element.onclick = (event) => {\n",
              "          event.preventDefault();\n",
              "          event.stopPropagation();\n",
              "          element.classList.toggle('function-repr-contents-collapsed');\n",
              "        };\n",
              "      }\n",
              "      </script>\n",
              "      </div>"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Numbers of Bikers per Month in the year of 2012\n",
        "monthlybikers=year_2012.groupby(by='mnth').agg({\n",
        "    'registered': 'sum',\n",
        "    'cnt': 'sum',\n",
        "    'casual': 'sum',\n",
        "}).round(0)\n",
        "print(monthlybikers)\n",
        "\n",
        "linemonthly = monthlybikers.plot(figsize=(8, 6), marker='o')\n",
        "linemonthly.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "plt.title(\"Number of Bikers per Month (2012)\", loc=\"center\", fontsize=20)\n",
        "plt.xticks(rotation=0)\n",
        "plt.show()\n",
        "st.pyplot"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "gzeLVK4ZI6rx",
        "outputId": "169314d3-c754-4d3b-f8c8-fad9b954b595"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "      registered     cnt  casual\n",
            "mnth                            \n",
            "1          87775   96744    8969\n",
            "2          94416  103137    8721\n",
            "3         133257  164875   31618\n",
            "4         135768  174224   38456\n",
            "5         151630  195865   44235\n",
            "6         159536  202830   43294\n",
            "7         161902  203607   41705\n",
            "8         171306  214503   43197\n",
            "9         174795  218573   43778\n",
            "10        164303  198841   34538\n",
            "11        131655  152664   21009\n",
            "12        110468  123713   13245\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method PyplotMixin.pyplot of DeltaGenerator()>"
            ],
            "text/html": [
              "<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n",
              "      pre.function-repr-contents {\n",
              "        overflow-x: auto;\n",
              "        padding: 8px 12px;\n",
              "        max-height: 500px;\n",
              "      }\n",
              "\n",
              "      pre.function-repr-contents.function-repr-contents-collapsed {\n",
              "        cursor: pointer;\n",
              "        max-height: 100px;\n",
              "      }\n",
              "    </style>\n",
              "    <pre style=\"white-space: initial; background:\n",
              "         var(--colab-secondary-surface-color); padding: 8px 12px;\n",
              "         border-bottom: 1px solid var(--colab-border-color);\"><b>streamlit.delta_generator.PyplotMixin.pyplot</b><br/>def pyplot(fig: Optional[&#x27;Figure&#x27;]=None, clear_figure: Optional[bool]=None, use_container_width: bool=True, **kwargs: Any) -&gt; &#x27;DeltaGenerator&#x27;</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/streamlit/elements/pyplot.py</a>Display a matplotlib.pyplot figure.\n",
              "\n",
              "Parameters\n",
              "----------\n",
              "fig : Matplotlib Figure\n",
              "    The figure to plot. When this argument isn&#x27;t specified, this\n",
              "    function will render the global figure (but this is deprecated,\n",
              "    as described below)\n",
              "\n",
              "clear_figure : bool\n",
              "    If True, the figure will be cleared after being rendered.\n",
              "    If False, the figure will not be cleared after being rendered.\n",
              "    If left unspecified, we pick a default based on the value of `fig`.\n",
              "\n",
              "    * If `fig` is set, defaults to `False`.\n",
              "\n",
              "    * If `fig` is not set, defaults to `True`. This simulates Jupyter&#x27;s\n",
              "      approach to matplotlib rendering.\n",
              "\n",
              "use_container_width : bool\n",
              "    If True, set the chart width to the column width. Defaults to `True`.\n",
              "\n",
              "**kwargs : any\n",
              "    Arguments to pass to Matplotlib&#x27;s savefig function.\n",
              "\n",
              "Example\n",
              "-------\n",
              "&gt;&gt;&gt; import streamlit as st\n",
              "&gt;&gt;&gt; import matplotlib.pyplot as plt\n",
              "&gt;&gt;&gt; import numpy as np\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; arr = np.random.normal(1, 1, size=100)\n",
              "&gt;&gt;&gt; fig, ax = plt.subplots()\n",
              "&gt;&gt;&gt; ax.hist(arr, bins=20)\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; st.pyplot(fig)\n",
              "\n",
              ".. output::\n",
              "   https://doc-pyplot.streamlit.app/\n",
              "   height: 630px\n",
              "\n",
              "Notes\n",
              "-----\n",
              ".. note::\n",
              "   Deprecation warning. After December 1st, 2020, we will remove the ability\n",
              "   to specify no arguments in `st.pyplot()`, as that requires the use of\n",
              "   Matplotlib&#x27;s global figure object, which is not thread-safe. So\n",
              "   please always pass a figure object as shown in the example section\n",
              "   above.\n",
              "\n",
              "Matplotlib supports several types of &quot;backends&quot;. If you&#x27;re getting an\n",
              "error using Matplotlib with Streamlit, try setting your backend to &quot;TkAgg&quot;::\n",
              "\n",
              "    echo &quot;backend: TkAgg&quot; &gt;&gt; ~/.matplotlib/matplotlibrc\n",
              "\n",
              "For more information, see https://matplotlib.org/faq/usage_faq.html.</pre>\n",
              "      <script>\n",
              "      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n",
              "        for (const element of document.querySelectorAll('.filepath')) {\n",
              "          element.style.display = 'block'\n",
              "          element.onclick = (event) => {\n",
              "            event.preventDefault();\n",
              "            event.stopPropagation();\n",
              "            google.colab.files.view(element.textContent, 38);\n",
              "          };\n",
              "        }\n",
              "      }\n",
              "      for (const element of document.querySelectorAll('.function-repr-contents')) {\n",
              "        element.onclick = (event) => {\n",
              "          event.preventDefault();\n",
              "          event.stopPropagation();\n",
              "          element.classList.toggle('function-repr-contents-collapsed');\n",
              "        };\n",
              "      }\n",
              "      </script>\n",
              "      </div>"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "st.subheader(\"Jumlah Bikers Tiap Kondisi Musim Tertentu\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ls4EzeztOTOU",
        "outputId": "35b9d6a5-4c14-40b9-c020-ca208fd9cbd6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DeltaGenerator()"
            ]
          },
          "metadata": {},
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Untuk menunjukkan banyaknya jumlah bikers pada tiap kondisi musim tertentu dengan menggunakan data temp dan weathersit\n",
        "#Untuk mengetahui seberapa banyak jumlah rental dalam tiap kondisi cuaca (weathersit) maka metode yang digunakan adalah bar chart\n",
        "#Bar Chart\n",
        "\n",
        "#Number of Registered Bikers in 2011\n",
        "weathersit_bikers=year_2011.groupby(by='weathersit').agg({\n",
        "    'registered': 'sum',\n",
        "    'cnt': 'sum',\n",
        "    'casual': 'sum',\n",
        "}).round(0)\n",
        "print(weathersit_bikers)\n",
        "\n",
        "sns.barplot(\n",
        "    y=\"registered\",\n",
        "    x=\"weathersit\",\n",
        "    data=weathersit_bikers\n",
        ")\n",
        "plt.title(\"Number of Registered Bikers by weathersit in 2011\", loc=\"center\", fontsize=15)\n",
        "plt.ylabel(None)\n",
        "plt.xlabel(None)\n",
        "plt.tick_params(axis='x', labelsize=12)\n",
        "plt.show()\n",
        "st.pyplot"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 732
        },
        "id": "yn3NFI-8I-h1",
        "outputId": "1e89980c-ea29-4d12-cc1d-5e8c97f3c397"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            registered     cnt  casual\n",
            "weathersit                            \n",
            "1               657795  835067  177272\n",
            "2               314937  382924   67987\n",
            "3                23119   25112    1993\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method PyplotMixin.pyplot of DeltaGenerator()>"
            ],
            "text/html": [
              "<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n",
              "      pre.function-repr-contents {\n",
              "        overflow-x: auto;\n",
              "        padding: 8px 12px;\n",
              "        max-height: 500px;\n",
              "      }\n",
              "\n",
              "      pre.function-repr-contents.function-repr-contents-collapsed {\n",
              "        cursor: pointer;\n",
              "        max-height: 100px;\n",
              "      }\n",
              "    </style>\n",
              "    <pre style=\"white-space: initial; background:\n",
              "         var(--colab-secondary-surface-color); padding: 8px 12px;\n",
              "         border-bottom: 1px solid var(--colab-border-color);\"><b>streamlit.delta_generator.PyplotMixin.pyplot</b><br/>def pyplot(fig: Optional[&#x27;Figure&#x27;]=None, clear_figure: Optional[bool]=None, use_container_width: bool=True, **kwargs: Any) -&gt; &#x27;DeltaGenerator&#x27;</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/streamlit/elements/pyplot.py</a>Display a matplotlib.pyplot figure.\n",
              "\n",
              "Parameters\n",
              "----------\n",
              "fig : Matplotlib Figure\n",
              "    The figure to plot. When this argument isn&#x27;t specified, this\n",
              "    function will render the global figure (but this is deprecated,\n",
              "    as described below)\n",
              "\n",
              "clear_figure : bool\n",
              "    If True, the figure will be cleared after being rendered.\n",
              "    If False, the figure will not be cleared after being rendered.\n",
              "    If left unspecified, we pick a default based on the value of `fig`.\n",
              "\n",
              "    * If `fig` is set, defaults to `False`.\n",
              "\n",
              "    * If `fig` is not set, defaults to `True`. This simulates Jupyter&#x27;s\n",
              "      approach to matplotlib rendering.\n",
              "\n",
              "use_container_width : bool\n",
              "    If True, set the chart width to the column width. Defaults to `True`.\n",
              "\n",
              "**kwargs : any\n",
              "    Arguments to pass to Matplotlib&#x27;s savefig function.\n",
              "\n",
              "Example\n",
              "-------\n",
              "&gt;&gt;&gt; import streamlit as st\n",
              "&gt;&gt;&gt; import matplotlib.pyplot as plt\n",
              "&gt;&gt;&gt; import numpy as np\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; arr = np.random.normal(1, 1, size=100)\n",
              "&gt;&gt;&gt; fig, ax = plt.subplots()\n",
              "&gt;&gt;&gt; ax.hist(arr, bins=20)\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; st.pyplot(fig)\n",
              "\n",
              ".. output::\n",
              "   https://doc-pyplot.streamlit.app/\n",
              "   height: 630px\n",
              "\n",
              "Notes\n",
              "-----\n",
              ".. note::\n",
              "   Deprecation warning. After December 1st, 2020, we will remove the ability\n",
              "   to specify no arguments in `st.pyplot()`, as that requires the use of\n",
              "   Matplotlib&#x27;s global figure object, which is not thread-safe. So\n",
              "   please always pass a figure object as shown in the example section\n",
              "   above.\n",
              "\n",
              "Matplotlib supports several types of &quot;backends&quot;. If you&#x27;re getting an\n",
              "error using Matplotlib with Streamlit, try setting your backend to &quot;TkAgg&quot;::\n",
              "\n",
              "    echo &quot;backend: TkAgg&quot; &gt;&gt; ~/.matplotlib/matplotlibrc\n",
              "\n",
              "For more information, see https://matplotlib.org/faq/usage_faq.html.</pre>\n",
              "      <script>\n",
              "      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n",
              "        for (const element of document.querySelectorAll('.filepath')) {\n",
              "          element.style.display = 'block'\n",
              "          element.onclick = (event) => {\n",
              "            event.preventDefault();\n",
              "            event.stopPropagation();\n",
              "            google.colab.files.view(element.textContent, 38);\n",
              "          };\n",
              "        }\n",
              "      }\n",
              "      for (const element of document.querySelectorAll('.function-repr-contents')) {\n",
              "        element.onclick = (event) => {\n",
              "          event.preventDefault();\n",
              "          event.stopPropagation();\n",
              "          element.classList.toggle('function-repr-contents-collapsed');\n",
              "        };\n",
              "      }\n",
              "      </script>\n",
              "      </div>"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Number of Registered Bikers in 2012\n",
        "weathersit_bikers=year_2012.groupby(by='weathersit').agg({\n",
        "    'registered': 'sum',\n",
        "    'cnt': 'sum',\n",
        "    'casual': 'sum',\n",
        "}).round(0)\n",
        "print(weathersit_bikers)\n",
        "\n",
        "plt.figure(figsize=(10,5))\n",
        "\n",
        "sns.barplot(\n",
        "    y=\"registered\",\n",
        "    x=\"weathersit\",\n",
        "    data=weathersit_bikers\n",
        ")\n",
        "plt.title(\"Number of Registered Bikers by Weathersit in 2012\", loc=\"center\", fontsize=15)\n",
        "plt.ylabel(None)\n",
        "plt.xlabel(None)\n",
        "plt.tick_params(axis='x', labelsize=12)\n",
        "plt.show()\n",
        "st.pyplot"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 748
        },
        "id": "b10AGk6AJNBo",
        "outputId": "c7fbd055-0b82-4251-f1b9-dd7483eb82e5"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            registered      cnt  casual\n",
            "weathersit                             \n",
            "1              1153811  1422885  269074\n",
            "2               512145   613934  101789\n",
            "3                10855    12757    1902\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method PyplotMixin.pyplot of DeltaGenerator()>"
            ],
            "text/html": [
              "<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n",
              "      pre.function-repr-contents {\n",
              "        overflow-x: auto;\n",
              "        padding: 8px 12px;\n",
              "        max-height: 500px;\n",
              "      }\n",
              "\n",
              "      pre.function-repr-contents.function-repr-contents-collapsed {\n",
              "        cursor: pointer;\n",
              "        max-height: 100px;\n",
              "      }\n",
              "    </style>\n",
              "    <pre style=\"white-space: initial; background:\n",
              "         var(--colab-secondary-surface-color); padding: 8px 12px;\n",
              "         border-bottom: 1px solid var(--colab-border-color);\"><b>streamlit.delta_generator.PyplotMixin.pyplot</b><br/>def pyplot(fig: Optional[&#x27;Figure&#x27;]=None, clear_figure: Optional[bool]=None, use_container_width: bool=True, **kwargs: Any) -&gt; &#x27;DeltaGenerator&#x27;</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/streamlit/elements/pyplot.py</a>Display a matplotlib.pyplot figure.\n",
              "\n",
              "Parameters\n",
              "----------\n",
              "fig : Matplotlib Figure\n",
              "    The figure to plot. When this argument isn&#x27;t specified, this\n",
              "    function will render the global figure (but this is deprecated,\n",
              "    as described below)\n",
              "\n",
              "clear_figure : bool\n",
              "    If True, the figure will be cleared after being rendered.\n",
              "    If False, the figure will not be cleared after being rendered.\n",
              "    If left unspecified, we pick a default based on the value of `fig`.\n",
              "\n",
              "    * If `fig` is set, defaults to `False`.\n",
              "\n",
              "    * If `fig` is not set, defaults to `True`. This simulates Jupyter&#x27;s\n",
              "      approach to matplotlib rendering.\n",
              "\n",
              "use_container_width : bool\n",
              "    If True, set the chart width to the column width. Defaults to `True`.\n",
              "\n",
              "**kwargs : any\n",
              "    Arguments to pass to Matplotlib&#x27;s savefig function.\n",
              "\n",
              "Example\n",
              "-------\n",
              "&gt;&gt;&gt; import streamlit as st\n",
              "&gt;&gt;&gt; import matplotlib.pyplot as plt\n",
              "&gt;&gt;&gt; import numpy as np\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; arr = np.random.normal(1, 1, size=100)\n",
              "&gt;&gt;&gt; fig, ax = plt.subplots()\n",
              "&gt;&gt;&gt; ax.hist(arr, bins=20)\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; st.pyplot(fig)\n",
              "\n",
              ".. output::\n",
              "   https://doc-pyplot.streamlit.app/\n",
              "   height: 630px\n",
              "\n",
              "Notes\n",
              "-----\n",
              ".. note::\n",
              "   Deprecation warning. After December 1st, 2020, we will remove the ability\n",
              "   to specify no arguments in `st.pyplot()`, as that requires the use of\n",
              "   Matplotlib&#x27;s global figure object, which is not thread-safe. So\n",
              "   please always pass a figure object as shown in the example section\n",
              "   above.\n",
              "\n",
              "Matplotlib supports several types of &quot;backends&quot;. If you&#x27;re getting an\n",
              "error using Matplotlib with Streamlit, try setting your backend to &quot;TkAgg&quot;::\n",
              "\n",
              "    echo &quot;backend: TkAgg&quot; &gt;&gt; ~/.matplotlib/matplotlibrc\n",
              "\n",
              "For more information, see https://matplotlib.org/faq/usage_faq.html.</pre>\n",
              "      <script>\n",
              "      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n",
              "        for (const element of document.querySelectorAll('.filepath')) {\n",
              "          element.style.display = 'block'\n",
              "          element.onclick = (event) => {\n",
              "            event.preventDefault();\n",
              "            event.stopPropagation();\n",
              "            google.colab.files.view(element.textContent, 38);\n",
              "          };\n",
              "        }\n",
              "      }\n",
              "      for (const element of document.querySelectorAll('.function-repr-contents')) {\n",
              "        element.onclick = (event) => {\n",
              "          event.preventDefault();\n",
              "          event.stopPropagation();\n",
              "          element.classList.toggle('function-repr-contents-collapsed');\n",
              "        };\n",
              "      }\n",
              "      </script>\n",
              "      </div>"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Number of Casual Bikers in 2011\n",
        "weathersit_bikers=year_2011.groupby(by='weathersit').agg({\n",
        "    'registered': 'sum',\n",
        "    'cnt': 'sum',\n",
        "    'casual': 'sum',\n",
        "}).round(0)\n",
        "print(weathersit_bikers)\n",
        "\n",
        "plt.figure(figsize=(10,5))\n",
        "\n",
        "sns.barplot(\n",
        "    y=\"casual\",\n",
        "    x=\"weathersit\",\n",
        "    data=weathersit_bikers\n",
        ")\n",
        "plt.title(\"Number of Casual Bikers by Weathersit in 2011\", loc=\"center\", fontsize=15)\n",
        "plt.ylabel(None)\n",
        "plt.xlabel(None)\n",
        "plt.tick_params(axis='x', labelsize=12)\n",
        "plt.show()\n",
        "st.pyplot"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 748
        },
        "id": "MK0exJZwJT7k",
        "outputId": "494fc49c-42ba-4053-9685-ef7a20d1a8c4"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            registered     cnt  casual\n",
            "weathersit                            \n",
            "1               657795  835067  177272\n",
            "2               314937  382924   67987\n",
            "3                23119   25112    1993\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method PyplotMixin.pyplot of DeltaGenerator()>"
            ],
            "text/html": [
              "<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n",
              "      pre.function-repr-contents {\n",
              "        overflow-x: auto;\n",
              "        padding: 8px 12px;\n",
              "        max-height: 500px;\n",
              "      }\n",
              "\n",
              "      pre.function-repr-contents.function-repr-contents-collapsed {\n",
              "        cursor: pointer;\n",
              "        max-height: 100px;\n",
              "      }\n",
              "    </style>\n",
              "    <pre style=\"white-space: initial; background:\n",
              "         var(--colab-secondary-surface-color); padding: 8px 12px;\n",
              "         border-bottom: 1px solid var(--colab-border-color);\"><b>streamlit.delta_generator.PyplotMixin.pyplot</b><br/>def pyplot(fig: Optional[&#x27;Figure&#x27;]=None, clear_figure: Optional[bool]=None, use_container_width: bool=True, **kwargs: Any) -&gt; &#x27;DeltaGenerator&#x27;</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/streamlit/elements/pyplot.py</a>Display a matplotlib.pyplot figure.\n",
              "\n",
              "Parameters\n",
              "----------\n",
              "fig : Matplotlib Figure\n",
              "    The figure to plot. When this argument isn&#x27;t specified, this\n",
              "    function will render the global figure (but this is deprecated,\n",
              "    as described below)\n",
              "\n",
              "clear_figure : bool\n",
              "    If True, the figure will be cleared after being rendered.\n",
              "    If False, the figure will not be cleared after being rendered.\n",
              "    If left unspecified, we pick a default based on the value of `fig`.\n",
              "\n",
              "    * If `fig` is set, defaults to `False`.\n",
              "\n",
              "    * If `fig` is not set, defaults to `True`. This simulates Jupyter&#x27;s\n",
              "      approach to matplotlib rendering.\n",
              "\n",
              "use_container_width : bool\n",
              "    If True, set the chart width to the column width. Defaults to `True`.\n",
              "\n",
              "**kwargs : any\n",
              "    Arguments to pass to Matplotlib&#x27;s savefig function.\n",
              "\n",
              "Example\n",
              "-------\n",
              "&gt;&gt;&gt; import streamlit as st\n",
              "&gt;&gt;&gt; import matplotlib.pyplot as plt\n",
              "&gt;&gt;&gt; import numpy as np\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; arr = np.random.normal(1, 1, size=100)\n",
              "&gt;&gt;&gt; fig, ax = plt.subplots()\n",
              "&gt;&gt;&gt; ax.hist(arr, bins=20)\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; st.pyplot(fig)\n",
              "\n",
              ".. output::\n",
              "   https://doc-pyplot.streamlit.app/\n",
              "   height: 630px\n",
              "\n",
              "Notes\n",
              "-----\n",
              ".. note::\n",
              "   Deprecation warning. After December 1st, 2020, we will remove the ability\n",
              "   to specify no arguments in `st.pyplot()`, as that requires the use of\n",
              "   Matplotlib&#x27;s global figure object, which is not thread-safe. So\n",
              "   please always pass a figure object as shown in the example section\n",
              "   above.\n",
              "\n",
              "Matplotlib supports several types of &quot;backends&quot;. If you&#x27;re getting an\n",
              "error using Matplotlib with Streamlit, try setting your backend to &quot;TkAgg&quot;::\n",
              "\n",
              "    echo &quot;backend: TkAgg&quot; &gt;&gt; ~/.matplotlib/matplotlibrc\n",
              "\n",
              "For more information, see https://matplotlib.org/faq/usage_faq.html.</pre>\n",
              "      <script>\n",
              "      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n",
              "        for (const element of document.querySelectorAll('.filepath')) {\n",
              "          element.style.display = 'block'\n",
              "          element.onclick = (event) => {\n",
              "            event.preventDefault();\n",
              "            event.stopPropagation();\n",
              "            google.colab.files.view(element.textContent, 38);\n",
              "          };\n",
              "        }\n",
              "      }\n",
              "      for (const element of document.querySelectorAll('.function-repr-contents')) {\n",
              "        element.onclick = (event) => {\n",
              "          event.preventDefault();\n",
              "          event.stopPropagation();\n",
              "          element.classList.toggle('function-repr-contents-collapsed');\n",
              "        };\n",
              "      }\n",
              "      </script>\n",
              "      </div>"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Number of Casual Bikers in 2012\n",
        "weathersit_bikers=year_2012.groupby(by='weathersit').agg({\n",
        "    'registered': 'sum',\n",
        "    'cnt': 'sum',\n",
        "    'casual': 'sum',\n",
        "}).round(0)\n",
        "print(weathersit_bikers)\n",
        "\n",
        "plt.figure(figsize=(10,5))\n",
        "\n",
        "sns.barplot(\n",
        "    y=\"casual\",\n",
        "    x=\"weathersit\",\n",
        "    data=weathersit_bikers\n",
        ")\n",
        "plt.title(\"Number of Casual Bikers by Weathersit in 2012\", loc=\"center\", fontsize=15)\n",
        "plt.ylabel(None)\n",
        "plt.xlabel(None)\n",
        "plt.tick_params(axis='x', labelsize=12)\n",
        "plt.show()\n",
        "st.pyplot"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 748
        },
        "id": "Fep71q3KJYcm",
        "outputId": "fb457dac-b047-4b59-a63b-67925aa259ec"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            registered      cnt  casual\n",
            "weathersit                             \n",
            "1              1153811  1422885  269074\n",
            "2               512145   613934  101789\n",
            "3                10855    12757    1902\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method PyplotMixin.pyplot of DeltaGenerator()>"
            ],
            "text/html": [
              "<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n",
              "      pre.function-repr-contents {\n",
              "        overflow-x: auto;\n",
              "        padding: 8px 12px;\n",
              "        max-height: 500px;\n",
              "      }\n",
              "\n",
              "      pre.function-repr-contents.function-repr-contents-collapsed {\n",
              "        cursor: pointer;\n",
              "        max-height: 100px;\n",
              "      }\n",
              "    </style>\n",
              "    <pre style=\"white-space: initial; background:\n",
              "         var(--colab-secondary-surface-color); padding: 8px 12px;\n",
              "         border-bottom: 1px solid var(--colab-border-color);\"><b>streamlit.delta_generator.PyplotMixin.pyplot</b><br/>def pyplot(fig: Optional[&#x27;Figure&#x27;]=None, clear_figure: Optional[bool]=None, use_container_width: bool=True, **kwargs: Any) -&gt; &#x27;DeltaGenerator&#x27;</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/streamlit/elements/pyplot.py</a>Display a matplotlib.pyplot figure.\n",
              "\n",
              "Parameters\n",
              "----------\n",
              "fig : Matplotlib Figure\n",
              "    The figure to plot. When this argument isn&#x27;t specified, this\n",
              "    function will render the global figure (but this is deprecated,\n",
              "    as described below)\n",
              "\n",
              "clear_figure : bool\n",
              "    If True, the figure will be cleared after being rendered.\n",
              "    If False, the figure will not be cleared after being rendered.\n",
              "    If left unspecified, we pick a default based on the value of `fig`.\n",
              "\n",
              "    * If `fig` is set, defaults to `False`.\n",
              "\n",
              "    * If `fig` is not set, defaults to `True`. This simulates Jupyter&#x27;s\n",
              "      approach to matplotlib rendering.\n",
              "\n",
              "use_container_width : bool\n",
              "    If True, set the chart width to the column width. Defaults to `True`.\n",
              "\n",
              "**kwargs : any\n",
              "    Arguments to pass to Matplotlib&#x27;s savefig function.\n",
              "\n",
              "Example\n",
              "-------\n",
              "&gt;&gt;&gt; import streamlit as st\n",
              "&gt;&gt;&gt; import matplotlib.pyplot as plt\n",
              "&gt;&gt;&gt; import numpy as np\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; arr = np.random.normal(1, 1, size=100)\n",
              "&gt;&gt;&gt; fig, ax = plt.subplots()\n",
              "&gt;&gt;&gt; ax.hist(arr, bins=20)\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; st.pyplot(fig)\n",
              "\n",
              ".. output::\n",
              "   https://doc-pyplot.streamlit.app/\n",
              "   height: 630px\n",
              "\n",
              "Notes\n",
              "-----\n",
              ".. note::\n",
              "   Deprecation warning. After December 1st, 2020, we will remove the ability\n",
              "   to specify no arguments in `st.pyplot()`, as that requires the use of\n",
              "   Matplotlib&#x27;s global figure object, which is not thread-safe. So\n",
              "   please always pass a figure object as shown in the example section\n",
              "   above.\n",
              "\n",
              "Matplotlib supports several types of &quot;backends&quot;. If you&#x27;re getting an\n",
              "error using Matplotlib with Streamlit, try setting your backend to &quot;TkAgg&quot;::\n",
              "\n",
              "    echo &quot;backend: TkAgg&quot; &gt;&gt; ~/.matplotlib/matplotlibrc\n",
              "\n",
              "For more information, see https://matplotlib.org/faq/usage_faq.html.</pre>\n",
              "      <script>\n",
              "      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n",
              "        for (const element of document.querySelectorAll('.filepath')) {\n",
              "          element.style.display = 'block'\n",
              "          element.onclick = (event) => {\n",
              "            event.preventDefault();\n",
              "            event.stopPropagation();\n",
              "            google.colab.files.view(element.textContent, 38);\n",
              "          };\n",
              "        }\n",
              "      }\n",
              "      for (const element of document.querySelectorAll('.function-repr-contents')) {\n",
              "        element.onclick = (event) => {\n",
              "          event.preventDefault();\n",
              "          event.stopPropagation();\n",
              "          element.classList.toggle('function-repr-contents-collapsed');\n",
              "        };\n",
              "      }\n",
              "      </script>\n",
              "      </div>"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Number of Total Bikers in 2011\n",
        "weathersit_bikers=year_2011.groupby(by='weathersit').agg({\n",
        "    'registered': 'sum',\n",
        "    'cnt': 'sum',\n",
        "    'casual': 'sum',\n",
        "}).round(0)\n",
        "print(weathersit_bikers)\n",
        "\n",
        "plt.figure(figsize=(10,5))\n",
        "\n",
        "sns.barplot(\n",
        "    y=\"cnt\",\n",
        "    x=\"weathersit\",\n",
        "    data=weathersit_bikers\n",
        ")\n",
        "plt.title(\"Number of Total Bikers by Weathersit in 2011\", loc=\"center\", fontsize=15)\n",
        "plt.ylabel(None)\n",
        "plt.xlabel(None)\n",
        "plt.tick_params(axis='x', labelsize=12)\n",
        "plt.show()\n",
        "st.pyplot"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 748
        },
        "id": "i1TXfkywJcll",
        "outputId": "f491b6a9-17eb-4dc1-94b7-af820de7007f"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            registered     cnt  casual\n",
            "weathersit                            \n",
            "1               657795  835067  177272\n",
            "2               314937  382924   67987\n",
            "3                23119   25112    1993\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "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5s1ub4Oq/BycOHFC3t7eioiIqPAaqNWrV8vDw6Pc01Av5QxHmZmZZZb34YcfKiwsTPfff7/8/f3No1ZOp06d0ueffy4fHx917tzZnG4Yhl5//XXdcccdqlevnvz8/NS2bVvNnDmz3Gu/vvrqK82cOVM2m01hYWHy8fFRkyZNNGzYMH355ZcutVX9TJe2bNky3XrrrfL391dYWJgef/zxCq9jvXjxopYsWSKbzabAwED5+/srKipK8+fPL/PZlP7/2i/DMLRw4UK1b99etWvXdjnFd8eOHerfv7+5/wgLC1Pnzp01depUl+uVyvusN2/eXLNmzZIkjRgxwuX9VmWfUtE1WaWvWXNn+7irffv2kqTCwkKXf5/OnTunrVu3SpIGDhxYZj7ntA0bNljSB/CfhJAFXCMaN26s0aNH68yZM5o7d261r2/nzp3q1q2bcnNzFRcXpwYNGmjt2rW68847lZ+fr169emnlypXq1KmTbDabPv/8cz3wwAMV/tJ56tQpdenSRenp6erZs6d69Oih/fv3KzExsdzT5L788ktFRUXpueee07lz5xQXF6eOHTtq586duvfeeys8onfu3Dn99re/VVpamqKiotSvX78qnV65f/9+dejQQa+88or8/f01YMAAtWrVSuvWrVPXrl21du1aszYqKkqJiYkKDQ2V9PMpKomJiUpMTFRYWFgVtm7lvv/+e3Xu3Fl//OMfVVRUpP79++u2227T+++/r7i4OM2bN8+sbdmypfmLdkBAgNlLYmKi+vTpY9Y999xz5nzdu3fX3XffLcMwtGTJEnXs2PGqBK09e/ZIUpm/hrvj4sWLSkxM1IIFC9S3b1+999575qlG69ev12233aaVK1cqJCRE/fr1U4sWLbRmzRp17ty5zBE0p0OHDqlTp07atWuXevXqpbvuukve3t4qLi5WbGysfve73+n48ePq2bOn4uPjFRYWpnfeeUevv/66W71X9eegcePG6tevn7777julp6eXu6xXX31VkjRq1KhK1xsREaFmzZrp7Nmz2rdvnzn9/Pnz2rNnj7p16yZvb2917txZH3/8scu8H330kQzDUKdOneTn5yfp5+vshg4dqgcffFC7d+9WVFSU7r77bhUUFGjWrFnq1auXzp0757KcZcuWafbs2SooKFCnTp3Ur18/BQYG6i9/+Ys6deqkf/3rX2ZtVT/TTpMnT1ZSUpIaN26svn37yjAMvfLKK+rXr58Mw3CpPXfunHr37q0nnnhCX375pbp06aK77rpLJ06c0IQJE5SQkKCSkpJyt+Po0aM1ceJENWrUSP369TOPYm/YsEE9evTQ22+/rcaNG2vAgAG67bbbdOrUKT3//PP64YcfLvv9GThwoBlUunXr5vJ+rdinuLN9rsS///1vST+fUli/fn1z+qFDh1RYWKiGDRuqSZMmZeZznpZa+nsP/GoYAGqUJMPLy8swDMOw2+1G7dq1jYCAAOPkyZNmzZw5cwxJxowZM1zm/e1vf2tIMo4cOVJmuUeOHDEkGb/97W9dps+YMcOQZEgylixZYk4vKioyYmNjDUlGZGSkcccddxhnz541x5ctW2ZIMm6//XaX5f3zn/80l3fXXXe5zLNr1y6jTp06hqenp5GVlWVOv3jxotGuXTtDkpGammoUFxebY4cPHzZatGhheHl5Gfv37y/zfiQZNpvNOH36dMUb9RIlJSXm+iZPnmyUlJSYY2+99Zbh6elp1KlTxzh+/LjLfJfbvlWVmJhY7vfunnvuMSQZDz74oFFYWGhO//DDD43atWsbXl5exqeffuoyjySjWbNmFa5r69atht1ud5lWXFxszJo1y5BkjBgxosw8lS3zUs7PT+n3U1xcbBw7dsx47rnnDE9PTyM4ONj497//7TKf83OSmJhY7vJWrFhhGIZh/PTTT+a2GTJkiFFUVGTWHjlyxAgICDDq1KljZGRkuCzn3XffNby9vY2IiAiX7blixQrzczN27Fjj4sWLLvNt3brVkGR06tTJOHfunMtYfn6+sWfPniptlyv5OXjvvfcMScZ9991XZnmHDx82JBlt27at0voNwzAeeughQ5Ixf/58c9r27dsNSca8efMMwzCM3/3ud4Yk46uvvjJrJk2aZEgypk6dak5LTU01JBk9e/Y0Tpw4YU4vLCw0Ro4caUgypkyZ4rL+zMzMMt93wzCMP//5z4Yko1evXmXGKvv8NWvWzJBkhIWFGdnZ2eb03Nxco2XLloYkY8uWLS7zPPHEE4YkY9CgQUZeXp453eFwGHfffXeZfV/p9YSEhBgHDhwo08ftt99uSDLeeuutMmO7du0yHA6H+XVVP+vucO5H/vnPf5bbtzvb50o8+uijhiTj3nvvdZn+j3/8w5Bk3HbbbRXOGxwcbEhy2UaXqujfuMvJzMws99844FrBkSzgGhIaGqoxY8aooKBAzz//fLWuq3v37ho9erT5tbe3t8aNGydJys7O1pIlSxQQEGCODx8+XCEhIcrMzNSFCxfKLM/T01MLFy50madTp05KSkpSSUmJXnrpJXP6hg0btH//fiUkJGjSpEny9Pz/XVHLli31wgsvqLi42PxL/qVefPFFl4uoK7Nt2zbt379fTZs21bPPPutyS+iEhAT1799fZ8+e1Z///OcqL/OX+Pe//62NGzeqTp06WrhwoXx8fMwx5/eluLjYvA6iqnr16mUefXPy9PRUSkqKbrjhBr399tuW9C9Js2bNMk938vLyUkREhKZOnarY2Fh98sknatGihdvLzM/PV1xcnDZu3KgnnnhCq1atcrlWY/78+SooKNCcOXMUGxvrMm+fPn00ZswYHTt2TJs2bSqz7IYNG+r5558vc+e83NxcST8fXXAexXEKDAxUdHS0W+/BnZ+D2NhYtWzZUps2bdKJEydclrNs2TJJMu/2VhXOUwZLnw7o/P9u3bq5/Le8Guf8Fy9eVGpqqgICAvTGG2+4HGnx8fHRwoULFRYWpldeecXliFCXLl3K/b6PGDFC3bp107Zt2674znDPPPOMWrdubX4dEhJi7r9KH708efKkXn31VUVERGjFihUuN5+oW7euli9fLh8fHy1ZsqTc9UyZMkU333xzmenOz8mlnzvp5+9vTV8fVNXtcyXeeecdLV++XN7e3nrmmWdcxpynSV7uWjHnz8KZM2d+UR/AfxpCFnCNmTJligICArRkyRLl5ORU23rKuyuT89SY5s2b6ze/+Y3LmJeXl5o1a6YLFy6Ue2pMVFSUyz/yTkOGDJHk+kud85qjAQMGlNub85e9Xbt2lRlr3LixOnbsWO58FXGu+4EHHij3AuuHH364TI/VyXmTgT59+ricemNFPz/++KNWrFihiRMnauTIkRo+fLiGDx+uCxcu6Mcff9SpU6d+WfP/p3379i6nPN19990KDw9XRkaGfv/731f4vKaKnDx5Uj179tSHH36o6dOna/HixWWej/RLPjexsbHl/iIYFRUlT09PrVixQq+++mqVr4esiDs/Bx4eHho1apQuXryoFStWmNMvXLigtLQ0+fr6unWba+f7L3064EcffaSAgADddtttkn6+GYGHh4f5GTx37pz27t0rT09PM4Dt3btXP/zwg7p27VomtEuSv7+/oqOjdfr0aR0+fNhl7OzZs3r99dc1ZcoUPfbYY+bn78SJEzIMQ19//XWV309p5e2vnPuo0gF127ZtunDhgvr06SN/f/8y84SFhalVq1bav39/mdMdJalfv37lrt8Zth9++GHt3r27wtMNa0pVt4+7srOz9dBDD8kwDM2dO9c85RFA5biFO3CNadiwoZKSkpSamupyjY3VbrjhhjLT6tSpU+FY6fHCwsIyY82aNSt3HueDbktfD+S8UcfQoUM1dOjQCnssL8xdyS2Mneuu6KG7zunff/+928u+EtXVz+uvv65Ro0Zd9qGhZ86cKTfYuau8W7gXFRXpiSee0PLly+Xn53fZm55c6umnn9bFixc1ZsyYMn8td3J+bir6fDq587n5zW9+o9TUVE2bNk2jRo3S6NGjdcstt+jOO+/U8OHDdeutt1b5PUju/RxIPx/l+f3vf6/ly5dr2rRp8vDw0IYNG5STk6MhQ4aoQYMGVV53mzZtFBISIrvdrq+++ko33nijduzYoZiYGNWq9fM/9/Xq1VNkZKQZsnbu3KmioiLzph/S/2/njIyMSh8E/MMPP5ihcuvWrRo8eLB51Kc8V3o0o7zrfZxHj0rvj5y9v/rqqxUeCXc6depUmc9SRZ+TP/zhD9q/f782bNigDRs2qF69eurevbv69eunhx56qMxR0KutqtvHHd9//7369Omj06dPKzk5WU8++WSZGue/CZf7o0pBQYFLP8CvBSELuAZNmjRJL730kpYuXWredtldlf2ltfQpeu6MWcHZW58+fcr9S7lTeQ/rrY5fZir7RfJqu5J+vv32W/NuZvPnz1d8fLxuuOEG86/5Xbt2VWZmpiUXwVfEx8dH8+bN05///GetWrVK8+fPr3KgGzBggNavX6+//OUvevDBB9W9e/cyNc7PTWV324uJiSkz7XKfm4kTJ+qBBx7Q+vXrlZGRoQ8//FDz5s3T/PnzNW/evHJ/ubRKSEiIEhIStHr1am3ZskWxsbFXdKqgJPNOjOvXr9eHH36oM2fOyOFwlNmW3bp10yuvvKLc3Nxyn4/l3M4tW7Y0j25VxBkCz549qwceeECnTp1SSkqKBg8erGbNmsnf318eHh568MEH9frrr1/x56+q+yRn71FRUZUedfH19S0zraLPSUREhPbs2aOtW7dq48aN2r59uxm4UlNTlZmZ6VYgtprV++xTp06pd+/e+vbbbzVixIgKb0TkDKXOu9JeqqCgQHl5eapXrx4hC786hCzgGhQSEqJx48Zpzpw5mjNnjsLDw8utc17LU96Ri2PHjlVrj5f69ttvLzu99Htw/tX10UcfVUJCQrX35lx3RT1W9QjJtdzPO++8o6KiIj311FPlhgLn3cGqW926dRUSEqLc3Fx9/fXXVQ5Zffv21dChQzVw4ED17dtXmzdvVteuXV1qmjRpoq+//lovvPCC5b/QRkREaNy4cRo3bpwuXryoN954QyNGjNDkyZM1bNiwKj8g3J2fA6fRo0dr9erVevXVV/Wb3/xGmzdvVqtWrdSrVy+330ePHj20fv16ffTRR+Z+oaKQ9dFHH5X7fCznz2ebNm3KfcB2eT788EP9+OOPGjhwoHmr8tKu1ufP2Xv37t21cOFCS5ddq1Yt9e7d2zw179tvv9UjjzyirVu36vnnn1dqaqql66spZ8+eVd++ffX5559rwIABevXVVyv8w0/r1q3l6+ur3Nxcff/992X2WXv37pUkt48IA9cDrskCrlETJ05U3bp19corr1R42pjzYZeXPoNG+vlUn6tp3759Za7PkKQ33nhDkusvenfddZckad26dVelN+cvkGvXri33mUR//etfXeqqm3NbpKenl/scm4r68fb2LvcZP5J0+vRpSeWfNvTBBx9U6/V9pTkcDvN0PeepRFXVr18/rVmzRoWFherTp48++eQTl/Gr9bmpVauWHnroIXXq1ElFRUXlfq4r4s7PgVOPHj108803a/369UpNTVVJSYkeffTRK+q99EOJP/zwQ3l5eclms7nUOI9Obd++XZmZmS7zST/fyCEoKEjbt2+v8jV8l/v8ffXVV+Yv25e63Gf6SvTq1UteXl7auHFjuTfosVKzZs00ZcoUSdKBAwcqrXf+UczK92u1wsJC3Xfffdq1a5fi4uL0+uuvl7lZTGn+/v664447JMnlMRhOzmcr3nvvvdXTMHANI2QB16gGDRrov//7v1VYWKjly5eXW/Pb3/5WkvTCCy+4nBO/detWzZ8//2q0aSopKdG4ceNc+sjKytKiRYvk4eGhMWPGmNMTEhIUGRmpVatW6ZlnnilzzYBhGPr444/LPM/nSvXs2VPt2rXTN998o5SUFJdTltatW6e///3vqlOnjh555BFL1leZG2+8UfHx8Tpz5oyefPJJl18GMzMztWTJEnl5eSkpKcllvvDwcOXk5JQbzJwXuf/1r381r4GQfr6uovRdJKtTUVGRkpOTZRiGWrRooTZt2ri9jP79++uNN97QuXPn1KdPH5ebWEycOFH+/v566qmn9Pe//73MvIWFhXrrrbcqPHWpPP/85z/1/vvvlzm99siRI/riiy/k4eFRbnCoiDs/B6U9/vjjKioq0uLFi+Xt7V3lhzZf6rbbblNAQIC+/PJLZWRkqH379mXC7k033aTQ0FC99tprOnPmjG666SbzDzbSz6fRTZ48WWfOnNGAAQPKPQr1/fff6y9/+Yv5tfPz9/e//93lmqy8vDyNHDmywsBzuc/0lbjhhhv0yCOP6JtvvtGQIUPK/ePCV199pb/97W9uLXfevHmy2+1lpr/zzjuSfj4SWhnnUcxDhw65te6rpbi4WEOGDNHWrVvVo0cP/f3vf3e582lFkpOTJUnPPvusyx8YMjMz9fLLLys4OFgjR46str6BaxWnCwLXsIkTJ2rhwoVyOBzljg8ZMkSpqanasWOH2rZtq06dOum7777T7t27lZycXOF59NXhnnvu0WeffaabbrpJt99+u/Lz87V161ZduHBB06dPd7kjYK1atbR+/XrFxcUpJSVFixYt0q233qpGjRrphx9+0L59+3Ty5EnNmzev0mtCqsLDw0OrVq1Sr1699Ic//EHr1q1TVFSUjh49qo8//li1atXS8uXLXX7RrG4vv/yyevTooddee03bt2+XzWZTbm6utm3bpuLiYr3wwguKiopymadfv35auHChOnTooK5du8rPz0+tW7fWpEmT1K9fP918883as2ePeS3N+fPn9c9//lNRUVHq2rWrduzYYVn/69evN09rlH6+AcKnn36q48ePq3bt2vrzn/98xde6DRgwQK+//rqGDBmiuLg4ZWRkqGPHjmrZsqVef/11Pfjgg0pISFDLli3Vtm1bBQQE6Pvvv9fevXtVUFCgTz/9tMrB6LPPPtOECRPUsGFDRUdHq0GDBsrNzdX27dtVWFiocePGVXi6bnnc+TkobdiwYZo6dap++ukn3XfffWrUqFGV11larVq1ZLPZ9P777ysvL6/cI2fSz0eznEG1vCO4U6dOVXZ2tv7yl7+obdu2uu2229SiRQsVFRXp0KFD+vzzz3Xrrbead8Ls2LGj7rrrLmVkZOg3v/mNevbsKennu/2FhITovvvu0z/+8Y8y67ncZ/pKLViwQN98843+9re/KT09XVFRUWratKkKCgr0+eef66uvvtJ9993n1qnKs2bN0lNPPaX27durVatWMgxDn332mb788kvVr19fTz31VKXL6N27t/z8/DRv3jwdOHBA4eHh8vDw0KRJk8q9I+XVtmjRIvMocUhIiJ544oly6/74xz+6XC8bGxurJ598UgsWLFBUVJTuuusuFRUVKSMjQ4ZhaMWKFeU+cuO//uu/zDsfOm8Is2zZMvPh3I0bNy5z1PqZZ54xH9HgPB1279696tKli1mzbt26q7ovBypUY0/oAmAYhuvDiMuTkpJiPuS0vAc1fvfdd8aQIUOMevXqGf7+/kbHjh2NtWvXVvow4vIeiFnRPE7lPZy39IM3v//+e+Ohhx4yGjZsaPj6+hrt27e/7IM38/LyjGeffdbo0KGDUadOHcPPz89o3ry5ERcXZyxevNjIzc2tcm9V8e233xqPPfaYERERYXh7exshISFG//79jZ07d1b5/bqroocRG4Zh/PDDD8bEiRONm266yfDx8TGCg4ON3r17G5s3by53WWfPnjXGjh1rREREGLVq1SqzPU6dOmWMGTPGaN68ueHr62vceOONxpQpU4yCgoIK34uu8GHEl758fX2Nli1bGo8//rhx+PDhMvNdyQNa33zzTcPLy8uoV6+ey0N8v/rqK+OJJ54wWrVqZfj5+Rl169Y1WrdubQwePNhYs2ZNuQ8jrughp4cPHzamT59udOvWzWjcuLHh4+Nj3HDDDcadd95p/O1vf3N5cPXl/JKfA6fu3bsbkir8/leV8+HTkow1a9aUW/PCCy+YNcuXL69wWf/4xz+M+Ph4o1GjRoa3t7fRqFEjIzo62pg8ebLL98Qwfn6Q9NNPP220atXK8PX1NSIiIozRo0cbP/zwQ4UP063sM+182G55KvpMGcbPDzxfuXKlcccddxj169c3vL29jfDwcMNmsxmzZs0yDh065FJ/ufUYhmG89tprxoMPPmi0bt3aqFu3rlG3bl0jMjLSSE5ONr777rsq97V582ajW7duRp06dcztf+k2KU9lDyMuz+X6KE9FP9uXviraH65YscKIjo42ateubQQHBxt9+vQxPv744wrX5+y9old5+yXndriS/oCrzcMwqvFW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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method PyplotMixin.pyplot of DeltaGenerator()>"
            ],
            "text/html": [
              "<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n",
              "      pre.function-repr-contents {\n",
              "        overflow-x: auto;\n",
              "        padding: 8px 12px;\n",
              "        max-height: 500px;\n",
              "      }\n",
              "\n",
              "      pre.function-repr-contents.function-repr-contents-collapsed {\n",
              "        cursor: pointer;\n",
              "        max-height: 100px;\n",
              "      }\n",
              "    </style>\n",
              "    <pre style=\"white-space: initial; background:\n",
              "         var(--colab-secondary-surface-color); padding: 8px 12px;\n",
              "         border-bottom: 1px solid var(--colab-border-color);\"><b>streamlit.delta_generator.PyplotMixin.pyplot</b><br/>def pyplot(fig: Optional[&#x27;Figure&#x27;]=None, clear_figure: Optional[bool]=None, use_container_width: bool=True, **kwargs: Any) -&gt; &#x27;DeltaGenerator&#x27;</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/streamlit/elements/pyplot.py</a>Display a matplotlib.pyplot figure.\n",
              "\n",
              "Parameters\n",
              "----------\n",
              "fig : Matplotlib Figure\n",
              "    The figure to plot. When this argument isn&#x27;t specified, this\n",
              "    function will render the global figure (but this is deprecated,\n",
              "    as described below)\n",
              "\n",
              "clear_figure : bool\n",
              "    If True, the figure will be cleared after being rendered.\n",
              "    If False, the figure will not be cleared after being rendered.\n",
              "    If left unspecified, we pick a default based on the value of `fig`.\n",
              "\n",
              "    * If `fig` is set, defaults to `False`.\n",
              "\n",
              "    * If `fig` is not set, defaults to `True`. This simulates Jupyter&#x27;s\n",
              "      approach to matplotlib rendering.\n",
              "\n",
              "use_container_width : bool\n",
              "    If True, set the chart width to the column width. Defaults to `True`.\n",
              "\n",
              "**kwargs : any\n",
              "    Arguments to pass to Matplotlib&#x27;s savefig function.\n",
              "\n",
              "Example\n",
              "-------\n",
              "&gt;&gt;&gt; import streamlit as st\n",
              "&gt;&gt;&gt; import matplotlib.pyplot as plt\n",
              "&gt;&gt;&gt; import numpy as np\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; arr = np.random.normal(1, 1, size=100)\n",
              "&gt;&gt;&gt; fig, ax = plt.subplots()\n",
              "&gt;&gt;&gt; ax.hist(arr, bins=20)\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; st.pyplot(fig)\n",
              "\n",
              ".. output::\n",
              "   https://doc-pyplot.streamlit.app/\n",
              "   height: 630px\n",
              "\n",
              "Notes\n",
              "-----\n",
              ".. note::\n",
              "   Deprecation warning. After December 1st, 2020, we will remove the ability\n",
              "   to specify no arguments in `st.pyplot()`, as that requires the use of\n",
              "   Matplotlib&#x27;s global figure object, which is not thread-safe. So\n",
              "   please always pass a figure object as shown in the example section\n",
              "   above.\n",
              "\n",
              "Matplotlib supports several types of &quot;backends&quot;. If you&#x27;re getting an\n",
              "error using Matplotlib with Streamlit, try setting your backend to &quot;TkAgg&quot;::\n",
              "\n",
              "    echo &quot;backend: TkAgg&quot; &gt;&gt; ~/.matplotlib/matplotlibrc\n",
              "\n",
              "For more information, see https://matplotlib.org/faq/usage_faq.html.</pre>\n",
              "      <script>\n",
              "      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n",
              "        for (const element of document.querySelectorAll('.filepath')) {\n",
              "          element.style.display = 'block'\n",
              "          element.onclick = (event) => {\n",
              "            event.preventDefault();\n",
              "            event.stopPropagation();\n",
              "            google.colab.files.view(element.textContent, 38);\n",
              "          };\n",
              "        }\n",
              "      }\n",
              "      for (const element of document.querySelectorAll('.function-repr-contents')) {\n",
              "        element.onclick = (event) => {\n",
              "          event.preventDefault();\n",
              "          event.stopPropagation();\n",
              "          element.classList.toggle('function-repr-contents-collapsed');\n",
              "        };\n",
              "      }\n",
              "      </script>\n",
              "      </div>"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Number of Total Bikers in 2012\n",
        "weathersit_bikers=year_2012.groupby(by='weathersit').agg({\n",
        "    'registered': 'sum',\n",
        "    'cnt': 'sum',\n",
        "    'casual': 'sum',\n",
        "}).round(0)\n",
        "print(weathersit_bikers)\n",
        "\n",
        "plt.figure(figsize=(10,5))\n",
        "\n",
        "sns.barplot(\n",
        "    y=\"cnt\",\n",
        "    x=\"weathersit\",\n",
        "    data=weathersit_bikers\n",
        ")\n",
        "plt.title(\"Number of Total Bikers by Weathersit in 2012\", loc=\"center\", fontsize=15)\n",
        "plt.ylabel(None)\n",
        "plt.xlabel(None)\n",
        "plt.tick_params(axis='x', labelsize=12)\n",
        "plt.show()\n",
        "st.pyplot"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 748
        },
        "id": "xGEir7d0Jgup",
        "outputId": "6c8de202-b10c-47dd-d5b6-128d896ed9b1"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            registered      cnt  casual\n",
            "weathersit                             \n",
            "1              1153811  1422885  269074\n",
            "2               512145   613934  101789\n",
            "3                10855    12757    1902\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method PyplotMixin.pyplot of DeltaGenerator()>"
            ],
            "text/html": [
              "<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n",
              "      pre.function-repr-contents {\n",
              "        overflow-x: auto;\n",
              "        padding: 8px 12px;\n",
              "        max-height: 500px;\n",
              "      }\n",
              "\n",
              "      pre.function-repr-contents.function-repr-contents-collapsed {\n",
              "        cursor: pointer;\n",
              "        max-height: 100px;\n",
              "      }\n",
              "    </style>\n",
              "    <pre style=\"white-space: initial; background:\n",
              "         var(--colab-secondary-surface-color); padding: 8px 12px;\n",
              "         border-bottom: 1px solid var(--colab-border-color);\"><b>streamlit.delta_generator.PyplotMixin.pyplot</b><br/>def pyplot(fig: Optional[&#x27;Figure&#x27;]=None, clear_figure: Optional[bool]=None, use_container_width: bool=True, **kwargs: Any) -&gt; &#x27;DeltaGenerator&#x27;</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/streamlit/elements/pyplot.py</a>Display a matplotlib.pyplot figure.\n",
              "\n",
              "Parameters\n",
              "----------\n",
              "fig : Matplotlib Figure\n",
              "    The figure to plot. When this argument isn&#x27;t specified, this\n",
              "    function will render the global figure (but this is deprecated,\n",
              "    as described below)\n",
              "\n",
              "clear_figure : bool\n",
              "    If True, the figure will be cleared after being rendered.\n",
              "    If False, the figure will not be cleared after being rendered.\n",
              "    If left unspecified, we pick a default based on the value of `fig`.\n",
              "\n",
              "    * If `fig` is set, defaults to `False`.\n",
              "\n",
              "    * If `fig` is not set, defaults to `True`. This simulates Jupyter&#x27;s\n",
              "      approach to matplotlib rendering.\n",
              "\n",
              "use_container_width : bool\n",
              "    If True, set the chart width to the column width. Defaults to `True`.\n",
              "\n",
              "**kwargs : any\n",
              "    Arguments to pass to Matplotlib&#x27;s savefig function.\n",
              "\n",
              "Example\n",
              "-------\n",
              "&gt;&gt;&gt; import streamlit as st\n",
              "&gt;&gt;&gt; import matplotlib.pyplot as plt\n",
              "&gt;&gt;&gt; import numpy as np\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; arr = np.random.normal(1, 1, size=100)\n",
              "&gt;&gt;&gt; fig, ax = plt.subplots()\n",
              "&gt;&gt;&gt; ax.hist(arr, bins=20)\n",
              "&gt;&gt;&gt;\n",
              "&gt;&gt;&gt; st.pyplot(fig)\n",
              "\n",
              ".. output::\n",
              "   https://doc-pyplot.streamlit.app/\n",
              "   height: 630px\n",
              "\n",
              "Notes\n",
              "-----\n",
              ".. note::\n",
              "   Deprecation warning. After December 1st, 2020, we will remove the ability\n",
              "   to specify no arguments in `st.pyplot()`, as that requires the use of\n",
              "   Matplotlib&#x27;s global figure object, which is not thread-safe. So\n",
              "   please always pass a figure object as shown in the example section\n",
              "   above.\n",
              "\n",
              "Matplotlib supports several types of &quot;backends&quot;. If you&#x27;re getting an\n",
              "error using Matplotlib with Streamlit, try setting your backend to &quot;TkAgg&quot;::\n",
              "\n",
              "    echo &quot;backend: TkAgg&quot; &gt;&gt; ~/.matplotlib/matplotlibrc\n",
              "\n",
              "For more information, see https://matplotlib.org/faq/usage_faq.html.</pre>\n",
              "      <script>\n",
              "      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n",
              "        for (const element of document.querySelectorAll('.filepath')) {\n",
              "          element.style.display = 'block'\n",
              "          element.onclick = (event) => {\n",
              "            event.preventDefault();\n",
              "            event.stopPropagation();\n",
              "            google.colab.files.view(element.textContent, 38);\n",
              "          };\n",
              "        }\n",
              "      }\n",
              "      for (const element of document.querySelectorAll('.function-repr-contents')) {\n",
              "        element.onclick = (event) => {\n",
              "          event.preventDefault();\n",
              "          event.stopPropagation();\n",
              "          element.classList.toggle('function-repr-contents-collapsed');\n",
              "        };\n",
              "      }\n",
              "      </script>\n",
              "      </div>"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "st.subheader(\"Regression Scatter Plot Temperature x Total of Bikers\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zbKp-nGqOkjq",
        "outputId": "849e3005-76ed-43e5-ec3e-c2346e2c0be3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DeltaGenerator()"
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Dari visualisasi data yang telah digunakan, didapatkan sebuah pola yang menunjukkan bahwa ada pengaruh antara kondisi cuaca dengan jumlah rental\n",
        "#Langkah selanjutnya adalah dengan menunjukkan regresi scatter plot untuk menunjukkan pengaruh antara temperature/suhu cuaca terhadap jumlah rental\n",
        "#Regression Scatter Plot Between Temperature and Total of Bikers in 2011\n",
        "#Data in 2011\n",
        "sns.regplot(\n",
        "    y=year_2011[\"cnt\"],\n",
        "    x=year_2011[\"temp\"]\n",
        ")\n",
        "plt.title(\"Scatter Plot of Temperature and Total of Bikers in 2011\", loc=\"center\", fontsize=15)\n",
        "plt.show()\n",
        "\n",
        "#Regression Scatter Plot Between Temperature and Total of Bikers in 2012\n",
        "#Data in 2012\n",
        "sns.regplot(\n",
        "    y=year_2012[\"cnt\"],\n",
        "    x=year_2012[\"temp\"]\n",
        ")\n",
        "plt.title(\"Regression Scatter Plot of Temperature and Total of Bikers in 2012\", loc=\"center\", fontsize=15)\n",
        "plt.show()\n",
        "st.pyplot\n",
        "st.caption('Copyright (c) Dicoding 2024')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 948
        },
        "id": "1zt3HRE1JkoH",
        "outputId": "184d98df-e0b5-43f3-8178-9548e16b0ec1"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DeltaGenerator()"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    }
  ]
}